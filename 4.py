# üìç RLE –∞–ª–≥–æ—Ä–∏—Ç–º: –º–æ–¥—É–ª—å —Å–∂–∞—Ç–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
# –ú–æ–¥—É–ª—å —Å–∂–∞—Ç–∏—è –¥–ª—è —á–∏—Å–µ–ª:
#
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
# 111112222334445
# –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
# 5142233415
#
# –ú–æ–¥—É–ª—å —Å–∂–∞—Ç–∏—è –¥–ª—è –±—É–∫–≤:
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
# AAAAAAFDDCCCCCCCAEEEEEEEEEEEEEEEEE
# –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
# 6A1F2D7C1A17E
#
# (5 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü, –¥–∞–ª–µ–µ —Å–∞–º–∞ –µ–¥–∏–Ω–∏—Ü–∞, 4 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–æ–µ–∫, –¥–∞–ª–µ–µ —Å–∞–º–∞ –¥–≤–æ–π–∫–∞ –∏ —Ç.–¥)
# –ú–æ–¥—É–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–µ—Ç –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É - –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

def coding(symbols):
    count = 1
    res = ''
    for i in range(len(symbols) - 1):
        if symbols[i] == symbols[i + 1]:
            count += 1
        else:
            res = res + str(count) + symbols[i]
            count = 1
    if count > 1 or (symbols[len(symbols) - 2] != symbols[-1]):
        res = res + str(count) + symbols[-1]
    return res

def decoding(symbols):
    count = ''
    res = ''
    for i in range(len(symbols)):
        if not symbols[i].isalpha():
            count += symbols[i]
        else:
            res = res + symbols[i] * int(count)
            count = ''
    return res

s = input("–í–≤–µ–¥–∏—Ç–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Å–∂–∞—Ç–∏—è: ")
print(f"–°–∏–º–≤–æ–ª—ã –ø–æ—Å–ª–µ —Å–∂–∞—Ç–∏—è: {coding(s)}")
print(f"–°–∏–º–≤–æ–ª—ã –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {decoding(coding(s))}")